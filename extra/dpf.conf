Display dpf {
    Driver     'DPF'
    Port       'usb0'
    Font       '12x16'
    Foreground 'ffffff'
    Background '000000'
    Basecolor  '000000'
    Orientation 2          # 0 = landscape, 1 = portrait
			   # 2 = reverse landscape, 3 = reverse portrait
    Backlight  backlight   # Backlight variable control, 0..7 (0=off, 7=max)
}

Widget OS {
    class 'Text'
    expression 'HouseMonitor v0.2'
    width 26 
    align 'C'
    update tick
    Background 'ffa500'
    Foreground 'ffffff'
}

Widget CPU {
    class  'Text'
    expression  uname('machine')
    prefix 'CPU '
    width  10
    align  'L'
    update tick
    Background 'FFFFFF00'
}


Widget RAM {
    class  'Text'
    expression meminfo('MemTotal')/1024
    postfix 'MB/'
    width 6 
    precision 0
    align  'R'
    update tick
    Background 'FFFFFF00'
}

Widget RAMUsed {
    class  'Text'
    expression meminfo('Active')/1024
    postfix 'MB'
    width 5 
    precision 0
    align  'L'
    update tick
}

Widget Busy {
    class 'Text'
    expression proc_stat::cpu('busy', 500)
    prefix 'Busy'
    postfix '%'
    width 10
    precision 1
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget System {
    class 'Text'
    expression proc_stat::cpu('system', 500)
    prefix 'Sys'
    postfix '%'
    width 10
    precision 1
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget User {
    class 'Text'
    expression proc_stat::cpu('user', 500)
    prefix 'User'
    postfix '%'
    width 10
    precision 1
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget BusyBar {
    class 'Bar'
    expression  proc_stat::cpu('busy',   500)
    expression2 proc_stat::cpu('system', 500)
    length 14
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}

Widget Load {
    class 'Text'
    expression loadavg(1)
    prefix 'Load'
    postfix loadavg(1)>1.0?'!':' '
    width 10
    precision 1
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget LoadBar {
    class 'Bar'
    expression  loadavg(1)
    max 2.0
    length 14 
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}


Widget Disk {
    class 'Text'
    # disk.[rw]blk return blocks, we assume a blocksize of 512
    # to get the number in kB/s we would do blk*512/1024, which is blk/2
    # expression (proc_stat::disk('.*', 'rblk', 500)+proc_stat::disk('.*', 'wblk', 500))/2
    # with kernel 2.6, disk_io disappeared from /proc/stat but moved to /proc/diskstat
    # therefore you have to use another function called 'diskstats':
    expression diskstats('hd.', 'read_sectors', 500) + diskstats('hd.', 'write_sectors', 500)
    prefix 'disk'
    postfix ' '
    width 10
    precision 0
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget DiskBar {
    class 'Bar'
    #expression  proc_stat::disk('.*', 'rblk', 500)
    #expression2 proc_stat::disk('.*', 'wblk', 500)
    # for kernel 2.6:
    expression  diskstats('sd.', 'read_sectors',  500)
    expression2 diskstats('sd.', 'write_sectors', 500)
    length 14
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}

Widget Eth0 {
    class 'Text'
    expression (netdev('eth0', 'Rx_bytes', 500)+netdev('wlan0', 'Tx_bytes', 500))/1024
    prefix 'LAN'
    postfix ' '
    width 10
    precision 0
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget Eth0Bar {
    class 'Bar'
    expression  netdev('eth0', 'Rx_bytes', 500)
    expression2 netdev('eth0', 'Tx_bytes', 500)
    length 14
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}

Widget Uptime {
    class 'Text'
    expression uptime('%d days %H:%M:%S')
    width 20
    align 'R'
    prefix 'Up '
    update 1000
    Background 'FFFFFF00'
}

Widget WifiLevel {
    class 'Text'
    expression wifi::level('wlan0')
    prefix 'level '
    width 15 
    align 'L'
    update tick
}

Widget WifiQuality {
    class 'Text'
    expression wifi::quality('wlan0')
    prefix 'wsig '
    width 12
    align 'L'
    update tick
}

Widget WifiQualityBar {
    class 'Bar'
    expression wifi::quality('wlan0')
    length 14
    direction 'E'
    style 'H'
    max 70    
    update 5000
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 'ffffff'
    BarColor1 'ffffff'
    
}


Widget WifiEssid {
    class 'Text'
    expression wifi::essid('wlan0')
    prefix 'essid '
    width 15
    align 'L'
    update tick
}

Widget HM_power {
    class 'Text'
    expression exec('cat /var/hm/power.txt', 1000)
    prefix 'CURRENT '
    width 26
    align 'L'
    update tick 
}

Widget HM_temp {
    class 'Text'
    expression exec('cat /var/hm/temps.txt', 1000)
    #prefix ' '
    width 26
    align 'L'
    update tick
}

Widget HM_flow {
    class 'Text'
    expression exec('echo "18 LPM"', 1000)
    prefix 'flow '
    width 26
    align 'L'
    update tick
}


#Widget Bgnd {
#    class 'Image'
#    file 'bgnd.png'
#    reload 1
#    update 5000
#    inverted 0
#    visible 1
#}

Display 'DPF'

Layout layout_240x320 {
    Row01.Col01 'OS'
    Row02.Col01 'CPU'
    Row02.Col14 'RAM'
    Row02.Col20 'RAMUsed'
    Row03.Col01 'Busy'
    Row03.Col12 'BusyBar'
    Row04.Col01 'System'
    Row04.Col12 'User'
    Row05.Col01 'Load'
    Row05.Col12 'LoadBar'
    Row06.Col01 'Disk'
    Row06.Col12 'DiskBar'
    Row7.Col01 'Eth0'
    Row7.Col12 'Eth0Bar'
    Row08.Col01 'WifiQuality'
    Row08.Col12 'WifiQualityBar'
    Row10.Col01 'HM_power'
    Row11.Col01 'HM_temp'
    Row12.Col01 'HM_flow'
    Row14.Col01 'Uptime'
#    Layer 2 {
#	X1.Y1 'Bgnd'
#    }
}

Layout 'layout_240x320'

Variables {
    backlight 7 
    tick 5000
    tack 2000
    minute 60000
}

